// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// WoProbitBoost
List WoProbitBoost(DataFrame x_train, NumericVector y_train, NumericVector Wo, int M_max, double tol);
RcppExport SEXP _SBPMT_WoProbitBoost(SEXP x_trainSEXP, SEXP y_trainSEXP, SEXP WoSEXP, SEXP M_maxSEXP, SEXP tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type x_train(x_trainSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y_train(y_trainSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Wo(WoSEXP);
    Rcpp::traits::input_parameter< int >::type M_max(M_maxSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    rcpp_result_gen = Rcpp::wrap(WoProbitBoost(x_train, y_train, Wo, M_max, tol));
    return rcpp_result_gen;
END_RCPP
}
// predictProbit
NumericVector predictProbit(NumericMatrix x_train, List tree, CharacterVector terminal_nodes);
RcppExport SEXP _SBPMT_predictProbit(SEXP x_trainSEXP, SEXP treeSEXP, SEXP terminal_nodesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x_train(x_trainSEXP);
    Rcpp::traits::input_parameter< List >::type tree(treeSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type terminal_nodes(terminal_nodesSEXP);
    rcpp_result_gen = Rcpp::wrap(predictProbit(x_train, tree, terminal_nodes));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_SBPMT_WoProbitBoost", (DL_FUNC) &_SBPMT_WoProbitBoost, 5},
    {"_SBPMT_predictProbit", (DL_FUNC) &_SBPMT_predictProbit, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_SBPMT(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
